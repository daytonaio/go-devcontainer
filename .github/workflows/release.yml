name: create-release
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v4.3.1

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v4
      - name: Set up QEMU for multi-architecture builds
        uses: docker/setup-qemu-action@v3
      - name: Setup Docker buildx for multi-architecture builds
        uses: docker/setup-buildx-action@v3
        with:
          use: true
      - name: Docker Tag Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/daytonaio/go-devcontainer
          sep-tags: ","
          tags: |
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          flavor: |
            latest=false
      # Working around devcontainer action not supporting the metadata format
      # https://github.com/devcontainers/ci/issues/235
      - name: Update Tags to Fit into devcontainers/cli format
        id: dcmeta
        run: |
          prefix="ghcr.io/daytonaio/go-devcontainer"
          input_list="$DOCKER_METADATA_OUTPUT_TAGS"
          delimiter=","

          result_list=$(echo "$input_list" | sed "s|${prefix}:||g")

          echo "tags=$result_list" >> "$GITHUB_OUTPUT"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and release devcontainer Multi-Platform
        uses: devcontainers/ci@v0.3
        env:
          # see: https://github.com/devcontainers/ci/issues/191#issuecomment-1603857155
          BUILDX_NO_DEFAULT_ATTESTATIONS: true
        with:
          imageName: ghcr.io/daytonaio/go-devcontainer
          cacheFrom: ghcr.io/daytonaio/go-devcontainer
          platform: linux/amd64,linux/arm64
          imageTag: ${{ steps.dcmeta.outputs.tags }}
